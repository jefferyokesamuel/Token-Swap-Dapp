{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Web3 from \"web3\";\nimport Tether from '../truffle_abis/Tether.json';\nimport Reward from '../truffle_abis/Reward.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  alert('No Ethereum browser detected, Checkout MetaMask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rewardData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                console.log(account);\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                console.log(networkId, 'Network Id'); //Load Tether Contract \n\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 16;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 16:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log(tetherBalance);\n                _context3.next = 22;\n                break;\n\n              case 21:\n                window.alert('Tether Contract is not detected');\n\n              case 22:\n                //LOading Reward Contract\n                rewardData = Reward.networks[networkId];\n\n                if (rewardData) {}\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      reward: {},\n      dbank: {},\n      tetherBalance: '0',\n      rewardBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } // React code goes here \n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"Hello World\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Jeffery/Projects/Token-Swap-Dapp/Token-Swap-Dapp/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","Reward","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","console","log","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","rewardData","props","reward","dbank","rewardBalance","stakingBalance","loading"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport './App.css'\nimport Navbar from './Navbar.js'\nimport Web3 from \"web3\";\nimport Tether from '../truffle_abis/Tether.json' \nimport Reward from '../truffle_abis/Reward.json'\n\nclass App extends Component {\n\n    async UNSAFE_componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if(window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.web3){\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            alert('No Ethereum browser detected, Checkout MetaMask')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const account = await web3.eth.getAccounts()\n        this.setState({account: account[0]})\n        console.log(account)\n        const networkId = await web3.eth.net.getId()\n        console.log(networkId, 'Network Id')\n\n        //Load Tether Contract \n        const tetherData = Tether.networks[networkId]\n        if(tetherData) {\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\n            this.setState({tether})\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\n            this.setState({tetherBalance: tetherBalance.toString()})\n            console.log(tetherBalance)\n        } else {\n            window.alert('Tether Contract is not detected')\n        }\n\n        //LOading Reward Contract\n        const rewardData = Reward.networks[networkId]\n        if(rewardData) {\n            \n        }\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            tether: {},\n            reward: {},\n            dbank: {},\n            tetherBalance: '0',\n            rewardBalance: '0',\n            stakingBalance: '0',\n            loading: true\n        }\n    }\n    // React code goes here \n    render () {\n        return (\n            <div>\n                <Navbar account={this.state.account}/>\n                <div className='text-center'>\n                    <h1>Hello World</h1>\n                 </div>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}